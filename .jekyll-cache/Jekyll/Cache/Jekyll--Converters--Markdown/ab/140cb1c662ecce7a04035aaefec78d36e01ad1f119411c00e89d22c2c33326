I"‰
<p>Ok, the name is a pun on Titan‚Äôs watch üòõ and is something that is an outcome of a really cool bash feature which I‚Äôll be discussing. Bash provides a way to create a TCP connection or send UDP packets to a host on  a given port, the cool thing is that you don‚Äôt have to rely on other scripting languages or programs for creating sockets/network connections when writing a shell script. Using this feature one can write simple to complex network utilities/scripts (a sigh of relief for scriptters :-) if that is that a word ).
NOTE: This is a bash provided feature(if it is compiled with ‚Äìenable-net-redirections option) and has nothing to do with /dev Devices.</p>

<!--more-->

<p>Using these sockets/connections is as simple as accessing a file which is inline with the unix philosophy. All you need to do is to read/write to files of the form:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/dev/&lt;protocol&gt;/&lt;host&gt;/&lt;port&gt;

where, &lt;protocol&gt; = tcp | udp
&lt;host&gt; = hostname | IP
&lt;port&gt; = port number.
</code></pre></div></div>

<p>For example, lets say you want to send a custom payload to a web server, you can do it with the following command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$echo -en ‚ÄúHEAD / HTTP/1.0\r\n\r\n‚Äù  &gt; /dev/tcp/example.com/80
</code></pre></div></div>

<p>You won‚Äôt get anything in return for obvious reasons(no read!). Now you‚Äôll say what good can this be. Well, you can assign it a fd and read and write to that fd if your script is a network interactive one and expects some data in response.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Example commands:
# 15 is just random fd that I chose, you can choose any fd number you like.

$ exec 15&lt;&gt; /dev/tcp/example.com/80
$ echo -en ‚ÄúHEAD / HTTP/1.1\r\nhost: example.com\r\n\r\n‚Äù &gt;&amp;15
$ cat &lt;&amp;15
HTTP/1.1 302 Found
Date: Thu, 30 Jul 2009 21:56:37 GMT
Server: Apache
Location: https://example.com:443/
Connection: close
Content-Type: text/html; charset=iso-8859-1
</code></pre></div></div>

<p>Finally, time for the slimmest TCP port scanner:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/sh
# Usage:&gt;$tcpscan.sh &lt;host&gt; &lt;start_port&gt; &lt;end_port&gt;
# 
for p in `seq $2 $3`;do  (echo ‚Äúfoo‚Äù &gt; /dev/tcp/$1/$p) &amp;&gt; /dev/null ; RET=$?; if [ $RET -eq 0 ]; then echo ‚Äú$p/tcp open‚Äù; fi; done
</code></pre></div></div>

<p>I know it looks ugly :-P, no sanity checks etc, had to keep it slim you know‚Ä¶
Tell me when u use it in your shell scripts.</p>
:ET